<UserControl
    x:Class="X4_ComplexCalculator.Main.WorkArea.StorageAssign.StorageAssign"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:X4_ComplexCalculator.Main.WorkArea.StorageAssign"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:x4bhv="clr-namespace:X4_ComplexCalculator.Common.Behavior"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Row="0" Grid.Column="0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Vertical">
                <TextBlock>
                    <Run Text="{Binding Value, ElementName=HourSlider}" />
                    時間後の保管庫状態</TextBlock>
                <Slider
                    x:Name="HourSlider"
                    IsSnapToTickEnabled="True"
                    Maximum="{Binding Value, ElementName=MaxHourUpDown}"
                    Minimum="1"
                    TickFrequency="1"
                    Value="{Binding Hour, Mode=TwoWay}" />
            </StackPanel>

            <StackPanel Grid.Column="1">
                <TextBlock Text="スライダー最大値" />
                <xctk:IntegerUpDown
                    x:Name="MaxHourUpDown"
                    Maximum="99999"
                    Minimum="0"
                    Value="10" />
            </StackPanel>
        </Grid>

        <DataGrid
            Grid.Row="1"
            Grid.ColumnSpan="2"
            x4bhv:DataGridCurrentCellEditModeBehavior.Enabled="True"
            x4bhv:VirtualizedDataGridSelectBehavior.MemberName="IsSelected"
            CellStyle="{StaticResource DataGridCellDefaultStyle}"
            ItemsSource="{Binding StorageAssignInfo}"
            SelectionUnit="Cell"
            Style="{StaticResource DefaultDataGridStyle}">

            <DataGrid.Columns>

                <!--  ウェア名  -->
                <DataGridTemplateColumn
                    ClipboardContentBinding="{Binding WareName, Mode=OneTime}"
                    Header="ウェア名"
                    SortMemberPath="WareName">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock VerticalAlignment="Center" Text="{Binding WareName, Mode=OneTime}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <!--  割当個数  -->
                <DataGridTemplateColumn
                    ClipboardContentBinding="{Binding AllocCount, Mode=OneTime}"
                    Header="割当個数"
                    SortMemberPath="AllocCount">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                VerticalAlignment="Center"
                                Text="{Binding AllocCount, StringFormat={StaticResource DefaultNumericFormat}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                TextAlignment="Right"
                                TextDecorations="Underline" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <xctk:IntegerUpDown
                                ClipValueToMinMax="True"
                                FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}"
                                FormatString="{StaticResource DefaultNumericFormat}"
                                Maximum="{Binding AllocableCount}"
                                Minimum="0"
                                Value="{Binding AllocCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <!--  割当可能個数  -->
                <DataGridTemplateColumn
                    ClipboardContentBinding="{Binding AllocableCount, Mode=OneTime}"
                    Header="割当可能個数"
                    SortMemberPath="AllocableCount">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                VerticalAlignment="Center"
                                Text="{Binding AllocableCount, Mode=OneWay, StringFormat={StaticResource DefaultNumericFormat}}"
                                TextAlignment="Right" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <!--  指定時間後の個数  -->
                <DataGridTemplateColumn
                    ClipboardContentBinding="{Binding AllocableCount, Mode=OneTime}"
                    Header="指定時間後の個数"
                    SortMemberPath="AfterCount">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock
                                VerticalAlignment="Center"
                                Text="{Binding AfterCount, Mode=OneWay, StringFormat={StaticResource DefaultNumericFormat}}"
                                TextAlignment="Right" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</UserControl>
