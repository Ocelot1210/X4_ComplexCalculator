<Control
    x:Class="X4_ComplexCalculator.Common.Controlls.DataGridFilter.Numerical.NumericalFilter"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dgx="clr-namespace:X4_ComplexCalculator_CustomControlLibrary.DataGridExtensions;assembly=X4_ComplexCalculator_CustomControlLibrary"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:x4conv="clr-namespace:X4_ComplexCalculator.Common.ValueConverter"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    x:Name="Control"
    mc:Ignorable="d">

    <Control.Resources>
        <x4conv:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Control.Resources>


    <Control.Template>
        <ControlTemplate>
            <Grid>
                <!--  フィルタのボタン  -->
                <Button x:Name="PART_FilterButton" Click="PART_FilterButton_Click">
                    <Grid>
                        <TextBlock
                            x:Name="PART_TriangleIcon"
                            Margin="0"
                            FontWeight="Bold"
                            Foreground="{Binding ElementName=PART_FilterIcon, Path=Foreground}"
                            Text="▼"
                            TextAlignment="Center" />
                        <Control x:Name="PART_FilterIcon" Style="{DynamicResource {x:Static dgx:DataGridFilter.IconStyleKey}}" />
                    </Grid>
                </Button>


                <!--  ボタンを押したら表示されるメニュー  -->
                <Popup
                    x:Name="PART_Popup"
                    d:DataContext="{d:DesignInstance dgx:DataGridFilterColumnControl}"
                    AllowsTransparency="True"
                    IsOpen="{Binding ElementName=Control, Path=IsOpen}"
                    StaysOpen="False">
                    <!--    -->
                    <StackPanel Grid.Row="2" Background="White">
                        <StackPanel Orientation="Horizontal">
                            <Button
                                x:Name="PART_OKButton"
                                Width="50"
                                Height="20"
                                Margin="5"
                                Click="OKButton_Click"
                                Content="OK" />
                            <Button
                                x:Name="PART_CancelButton"
                                Width="50"
                                Height="20"
                                Margin="5"
                                Click="CancelButton_Click"
                                Content="Cancel" />
                            <Button
                                x:Name="PART_ClearButton"
                                Width="50"
                                Height="20"
                                Margin="30,5,5,5"
                                Click="PART_ClearButton_Click"
                                Content="Clear" />
                        </StackPanel>
                        <GroupBox Header="数値で検索">
                            <StackPanel Orientation="Vertical">
                                <xctk:WatermarkTextBox
                                    x:Name="PART_FilterText"
                                    Text="{Binding ElementName=Control, Path=FilterText1}"
                                    TextAlignment="Right"
                                    Watermark="値を入力" />

                                <xctk:WatermarkTextBox
                                    Text="{Binding ElementName=Control, Path=FilterText2}"
                                    TextAlignment="Right"
                                    Visibility="{Binding Path=IsChecked, ElementName=PART_BetweenRadioButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Watermark="最大値を入力" />

                                <GroupBox Header="一致条件">
                                    <StackPanel Orientation="Vertical">
                                        <RadioButton Content="＝ 指定の値に等しい" IsChecked="{Binding ElementName=Control, Path=Conditions, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Equals, UpdateSourceTrigger=PropertyChanged}" />
                                        <RadioButton Content="≠ 指定の値に等しくない" IsChecked="{Binding ElementName=Control, Path=Conditions, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=NotEquals, UpdateSourceTrigger=PropertyChanged}" />
                                        <Separator />
                                        <RadioButton Content="＞ 指定の値を超える" IsChecked="{Binding ElementName=Control, Path=Conditions, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=GreaterThan, UpdateSourceTrigger=PropertyChanged}" />
                                        <RadioButton Content="≧ 指定の値以上" IsChecked="{Binding ElementName=Control, Path=Conditions, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=GreaterThanOrEqualTo, UpdateSourceTrigger=PropertyChanged}" />
                                        <RadioButton Content="＜ 指定の値未満" IsChecked="{Binding ElementName=Control, Path=Conditions, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=LessThan, UpdateSourceTrigger=PropertyChanged}" />
                                        <RadioButton Content="≦ 指定の値以下" IsChecked="{Binding ElementName=Control, Path=Conditions, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=LessThanOrEqualTo, UpdateSourceTrigger=PropertyChanged}" />
                                        <Separator />
                                        <RadioButton
                                            x:Name="PART_BetweenRadioButton"
                                            Content="～ 指定の範囲内"
                                            IsChecked="{Binding ElementName=Control, Path=Conditions, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Between, UpdateSourceTrigger=PropertyChanged}" />
                                    </StackPanel>
                                </GroupBox>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding ElementName=Control, Path=IsFilterEnabled}" Value="True">
                    <Setter TargetName="PART_FilterIcon" Property="Visibility" Value="Visible" />
                    <Setter TargetName="PART_TriangleIcon" Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=Control, Path=IsFilterEnabled}" Value="False">
                    <Setter TargetName="PART_FilterIcon" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="PART_TriangleIcon" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Control.Template>

</Control>