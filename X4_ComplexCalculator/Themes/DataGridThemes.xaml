<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:X4_ComplexCalculator.Themes"
    xmlns:x4conv="clr-namespace:X4_ComplexCalculator.Common.ValueConverter">


    <!--  DataGridColumnHeaderの初期設定  -->
    <Style x:Key="DefaultDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <!--  コンテキストメニューを表示しても選択行が灰色にならないようにするスタイル  -->
    <Style x:Key="DataGridCellDefaultStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <!--  選択中のセルの色  -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>

            <!--  コンテキストメニューを表示している場合の背景色  -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>


    <!--  DataGridの初期設定  -->
    <Style x:Key="DefaultDataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="EnableColumnVirtualization" Value="True" />
        <Setter Property="EnableRowVirtualization" Value="True" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DefaultDataGridColumnHeaderStyle}" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
        <Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
        <Setter Property="AlternatingRowBackground" Value="LightCyan" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible" />
        <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
    </Style>


    <!--  右寄せセル用  -->
    <Style
        x:Key="RightAlignedDataGridCell"
        BasedOn="{StaticResource DataGridCellDefaultStyle}"
        TargetType="{x:Type DataGridCell}">
        <Setter Property="TextBlock.TextAlignment" Value="Right" />
    </Style>

    <!--  ValueConverter  -->
    <x4conv:Visiblity2NullableBooleanConverter x:Key="Visiblity2NullableConverter" />
    <x4conv:Bool2VisiblityConverter x:Key="Bool2VisiblityConverter" />
    <x4conv:SliderValueConverter x:Key="SliderValueConverter" />
    <x4conv:IsLessThanConverter x:Key="IsLessThanConverter" />

    <!--  RowDetailsを使用するDataGridのRowHeaderStyle  -->
    <Style x:Key="RowDetailsRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <!--  RowDetailsを使用する  -->
    <Style x:Key="DataGridDetailsRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="DetailsVisibility" Value="{Binding IsExpanded, Mode=TwoWay, Converter={StaticResource Bool2VisiblityConverter}}" />
    </Style>

    <!--  RowDetailsを使用するDataGridのRowHeaderのDataTemplate  -->
    <DataTemplate x:Key="DataGridDetailsRowHeaderTemplate">
        <ToggleButton
            Margin="0"
            Padding="0"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            IsChecked="{Binding Path=DetailsVisibility, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Converter={StaticResource Visiblity2NullableConverter}}">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content" Value="－" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Content" Value="＋" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
    </DataTemplate>

    <!--  RowDetailsがあるDataGridのスタイル  -->
    <Style
        x:Key="DetailsDataGridStyle"
        BasedOn="{StaticResource DefaultDataGridStyle}"
        TargetType="{x:Type DataGrid}">
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellDefaultStyle}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource RowDetailsRowHeaderStyle}" />
        <Setter Property="RowStyle" Value="{StaticResource DataGridDetailsRowStyle}" />
        <Setter Property="RowHeaderTemplate" Value="{StaticResource DataGridDetailsRowHeaderTemplate}" />
        <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
    </Style>

</ResourceDictionary>